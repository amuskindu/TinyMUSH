/* prototypes.h : functioons prototypes */

/*
 * Do not edit this file by hand -- Your changes will be overwritten
 */

#include "copyright.h"

#ifndef __PROTOTYPES_H
#define __PROTOTYPES_H

#include "vattr.h"
#include "help.h"
#include "player_c.h"
#include "powers.h"
#include "walkdb.h"
#include "functions.h"
#include "command.h"
#include "match.h"
#include "file_c.h"
#include "player.h"

/* alloc.c */

/* api.c */

/* boolexp.c */

/* bsd.c */

/* command.c */

/* conf.c */

/* cque.c */

/* create.c */

/* db.c */

/* db_rw.c */
extern BOOLEXP *getboolexp1(FILE *);
extern BOOLEXP *getboolexp(FILE *);
extern int unscramble_attrnum(int);
extern int get_list(FILE *, dbref, int);
extern void putbool_subexp(FILE *, BOOLEXP *);
extern void putboolexp(FILE *, BOOLEXP *);
extern void upgrade_flags(FLAG *, FLAG *, FLAG *, dbref, int, int);
extern void efo_convert(void);
extern void fix_mux_zones(void);
extern void fix_typed_quotas(void);
extern dbref db_read_flatfile(FILE *, int *, int *, int *);
extern int db_read(void);
extern int db_write_object_out(FILE *, dbref, int, int, int *);
extern dbref db_write_flatfile(FILE *, int, int);
extern dbref db_write(void);
extern FILE *db_module_flatfile(char *, int);

/* eval.c */
extern char *parse_to_cleanup(int, int, char *, char *, char *);
extern char *parse_to(char **, char, int);
extern char *parse_arglist(dbref, dbref, dbref, char *, char, dbref, char *[], dbref, char *[], dbref);
extern int get_gender(dbref);
extern void tcache_init(void);
extern int tcache_empty(void);
extern void tcache_add(char *, char *);
extern void tcache_finish(dbref);
extern void exec(char *, char **, dbref, dbref, dbref, int, char **, char *[], int);
extern GDATA *save_global_regs(const char *);
extern void restore_global_regs(const char *, GDATA *);

/* file_c.c */
extern void do_list_file(dbref, dbref, int, char *);
extern FBLOCK *fcache_fill(FBLOCK *, char);
extern int fcache_read(FBLOCK **, char *);
extern void fcache_rawdump(int, int);
extern void fcache_dump(DESC *, int);
extern void fcache_send(dbref, int);
extern void fcache_load(dbref);
extern void fcache_init(void);

/* flags.c */
extern int fh_any(dbref, dbref, FLAG, int, int);
extern int fh_god(dbref, dbref, FLAG, int, int);
extern int fh_wiz(dbref, dbref, FLAG, int, int);
extern int fh_wizroy(dbref, dbref, FLAG, int, int);
extern int fh_restrict_player(dbref, dbref, FLAG, int, int);
extern int fh_privileged(dbref, dbref, FLAG, int, int);
extern int fh_inherit(dbref, dbref, FLAG, int, int);
extern int fh_dark_bit(dbref, dbref, FLAG, int, int);
extern int fh_going_bit(dbref, dbref, FLAG, int, int);
extern int fh_hear_bit(dbref, dbref, FLAG, int, int);
extern int fh_player_bit(dbref, dbref, FLAG, int, int);
extern int fh_power_bit(dbref, dbref, FLAG, int, int);
extern void init_flagtab(void);
extern void display_flagtab(dbref);
extern FLAGENT *find_flag(dbref, char *);
extern void flag_set(dbref, dbref, char *, int);
extern char *decode_flags(dbref, FLAGSET);
extern char *unparse_flags(dbref, dbref);
extern int has_flag(dbref, dbref, char *);
extern char *flag_description(dbref, dbref);
extern char *unparse_object_numonly(dbref);
extern char *unparse_object(dbref, dbref, int);
extern FLAGENT *letter_to_flag(char);
extern int cf_flag_access(int *, char *, long, dbref, char *);
extern int cf_flag_name(int *, char *, long, dbref, char *);
extern int convert_flags(dbref, char *, FLAGSET *, FLAG *);
extern void decompile_flags(dbref, dbref, char *);

/* fnhelper.c */
extern char *trim_space_sep(char *, const Delim *);
extern char *next_token(char *, const Delim *);
extern char *split_token(char **, const Delim *);
extern char *next_token_ansi(char *, const Delim *, int *);
extern int countwords(char *, const Delim *);
extern int list2arr(char ***, int, char *, const Delim *);
extern void arr2list(char **, int, char *, char **, const Delim *);
extern int list2ansi(int *, int *, int, char *, const Delim *);
extern dbref match_thing(dbref, char *);
extern int fn_range_check(const char *, int, int, int, char *, char **);
extern int delim_check(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int, int, Delim *, int);
extern int xlate(char *);
extern void do_reverse(char *, char *);
extern long random_range(long, long);
extern void init_genrand(unsigned long);
extern void next_state(void);
extern long genrand_int31(void);

/* functions.c */
extern void init_functab(void);
extern void do_function(dbref, dbref, int, char *, char *);
extern void list_functable(dbref);
extern void helper_list_funcaccess(dbref, FUN *, char *);
extern void list_funcaccess(dbref);
extern int cf_func_access(int *, char *, long, dbref, char *);

/* funext.c */
extern void fun_config(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lwho(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ports(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_doing(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_conninfo(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_session(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_programmer(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_helptext(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_html_escape(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_html_unescape(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_url_escape(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_url_unescape(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funiter.c */
extern void perform_loop(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_iter(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ilev(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_inum(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_itext(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_itext2(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ibreak(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_fold(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_filter(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_map(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_mix(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_step(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_foreach(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_munge(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_while(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funlist.c */
extern int autodetect_list(char *[], int);
extern int get_list_type(char *[], int, int, char *[], int);
extern int dbnum(char *);
extern void fun_words(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_first(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_rest(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_last(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_match(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_matchall(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_extract(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_index(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void do_itemfuns(char *, char **, char *, int, char *, const Delim *, int);
extern void fun_ldelete(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_replace(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_insert(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lreplace(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_remove(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_member(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_revwords(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_splice(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int a_comp(const void *, const void *);
extern int c_comp(const void *, const void *);
extern int arec_comp(const void *, const void *);
extern int crec_comp(const void *, const void *);
extern int f_comp(const void *, const void *);
extern int i_comp(const void *, const void *);
extern int *do_asort(char *[], int, int, int);
extern void handle_sort(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int u_comp(const void *, const void *);
extern void sane_qsort(void *[], int, int, int (*)(const void *, const void *));
extern void fun_sortby(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_sets(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_columns(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void tables_helper(char *, int *, int, int [], char *, char *, const Delim *, const Delim *, const Delim *, char *, char **, int);
extern void perform_tables(dbref, char *, int, int [], char *, char *, const Delim *, const Delim *, const Delim *, char *, char **, int);
extern void process_tables(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_table(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_elements(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_exclude(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_grab(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_graball(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void swap(char **, char **);
extern void fun_shuffle(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ledit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_itemize(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_choose(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_group(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_tokens(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funmath.c */
extern unsigned int fp_check_weird(char *, char **, long double);
extern void fval(char *, char **, long double, int);
extern void fun_pi(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_e(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_sign(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_abs(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_floor(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ceil(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_round(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_trunc(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_inc(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_dec(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_sqrt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_exp(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ln(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_trig(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_baseconv(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_gt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_gte(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lte(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_eq(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_neq(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ncomp(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_sub(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_div(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_floordiv(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_fdiv(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_modulo(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_remainder(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_power(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_log(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_shl(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_shr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_band(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_bor(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_bnand(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_add(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_mul(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_max(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_min(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_bound(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_dist2d(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_dist3d(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ladd(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lmax(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lmin(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_vector(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_vectors(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_not(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_notbool(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_t(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern long long cvtfun(int, char *);
extern void handle_logic(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_listbool(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funmisc.c */
extern void fun_switchall(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_switch(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_case(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_ifelse(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_rand(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_die(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lrand(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lnum(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_time(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_secs(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_convsecs(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int do_convtime(char *, struct tm *);
extern void fun_convtime(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_timefmt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_etimefmt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_starttime(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_restarts(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_restarttime(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_version(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_mudname(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_hasmodule(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_connrecord(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_fcount(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_fdepth(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ccount(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_cdepth(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_benchmark(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_s(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_subeval(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int check_command(dbref, char *, char *, char **, char *[], int);
extern void fun_link(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_tel(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_wipe(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_pemit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_remit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_oemit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_force(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_trigger(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_wait(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_command(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_create(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_set(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void list_qpids(dbref, dbref, dbref, BQUE *, char *, char **, char *);
extern void fun_ps(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funobj.c */
extern void fun_objid(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_con(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_exit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_next(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_loc(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_rloc(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_room(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_owner(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_controls(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_sees(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_nearby(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_okpres(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_name(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_pronoun(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lock(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_elock(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_elockstr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_xcon(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lcon(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lexits(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_entrances(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_home(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_money(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_findable(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_visible(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_writable(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_flags(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_flaglists(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int atr_has_flag(dbref, dbref, ATTR *, int, int, char *);
extern void fun_hasflag(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_haspower(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_hasflags(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_timestamp(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_parent(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lparent(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_children(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_zone(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void scan_zone(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_zfun(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_hasattr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_v(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_get(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_eval(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void do_ufun(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_objcall(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_localize(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_private(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_default(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_edefault(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_udefault(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_objeval(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_num(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_pmatch(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_pfind(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_locate(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_lattr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_search(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_stats(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int mem_usage(dbref);
extern int mem_usage_attr(dbref, char *);
extern void fun_objmem(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_playmem(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_type(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_hastype(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lastcreate(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void transform_say(dbref, char *, char *, int, char *, char *, char *, const Delim *, const Delim *, dbref, dbref, dbref, char *, char **);
extern void fun_speak(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funstring.c */
extern void fun_isword(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_isalnum(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_isnum(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_isdbref(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_isobjid(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_null(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_squish(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_trim(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_after(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_before(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lcstr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ucstr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_capstr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_space(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ljust(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_rjust(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_center(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_left(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_right(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_chomp(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_comp(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_streq(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_strmatch(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_edit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_merge(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_secure(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_escape(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_esc(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_stripchars(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ansi(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_stripansi(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void crunch_code(char *);
extern void crypt_code(char *, char **, char *, char *, int);
extern void fun_encrypt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_decrypt(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_scramble(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_reverse(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_mid(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_translate(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_pos(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lpos(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_diffpos(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_wordpos(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_ansipos(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_repeat(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_border(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_align(int, char **, char **, char, Delim, Delim, char *, char **);
extern void fun_align(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lalign(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_cat(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_strcat(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_join(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_strlen(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_delete(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_art(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_alphamax(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_alphamin(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_valid(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_beep(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* funvars.c */
extern int set_register(const char *, char *, char *);
extern char *get_register(GDATA *, char *);
extern void fun_setq(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_setr(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void read_register(char *, char *, char **);
extern void fun_r(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lregs(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_wildmatch(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_qvars(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_qsub(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int calc_limitmask(char *);
extern void fun_nofx(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern char is_in_array(char *, char **, int);
extern void handle_ucall(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void print_htab_matches(dbref, HASHTAB *, char *, char **);
extern void set_xvar(dbref, char *, char *);
extern void clear_xvars(dbref, char **, int);
extern void xvars_clr(dbref);
extern void fun_x(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_setx(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_store(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_xvars(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_let(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lvars(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_clearvars(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern int istype_char(char *);
extern int istype_dbref(char *);
extern int istype_int(char *);
extern int istype_float(char *);
extern int istype_string(char *);
extern void fun_structure(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_construct(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void load_structure(dbref, char *, char **, char *, char *, char *, char, int);
extern void fun_load(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_read(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_delimit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_z(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_modify(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void unload_structure(dbref, char *, char **, char *, char, int);
extern void fun_unload(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_write(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_destruct(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_unstructure(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lstructures(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_linstances(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void structure_clr(dbref);
extern void stack_clr(dbref);
extern int stack_set(dbref, OBJSTACK *);
extern void fun_empty(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_items(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_push(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_dup(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_swap(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void handle_pop(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_popn(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_lstack(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_regedit(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_wildparse(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_regparse(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_regrab(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_regmatch(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_until(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void perform_grep(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void grid_free(dbref, OBJGRID *);
extern void fun_gridmake(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_gridsize(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_gridset(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);
extern void fun_grid(char *, char **, dbref, dbref, dbref, char *[], int, char *[], int);

/* game.c */
extern pid_t isrunning(char *);
extern int fileexist(char *);
extern void handlestartupflatfiles(int);
extern int tailfind(char *, char *);
extern void do_dump(dbref, dbref, int);
extern void do_hashresize(dbref, dbref, int);
extern int regexp_match(char *, char *, int, char *[], int);
extern int atr_match1(dbref, dbref, dbref, char, char *, char *, int, int);
extern int atr_match(dbref, dbref, char, char *, char *, int);
extern int check_filter(dbref, dbref, int, const char *);
extern char *add_prefix(dbref, dbref, int, const char *, const char *);
extern char *dflt_from_msg(dbref, dbref);
extern void html_escape(const char *, char *, char **);
extern void notify_check(dbref, dbref, int, const char *, ...);
extern void notify_except(dbref, dbref, dbref, int, const char *, ...);
extern void notify_except2(dbref, dbref, dbref, dbref, int, const char *, ...);
extern void report_timecheck(dbref, int, int, int);
extern void do_timecheck(dbref, dbref, int);
extern char **add_array(char **, char *, int *, char *);
extern int backup_copy(char *, char *, int);
extern char *mktimestamp(void);
extern void do_backup_mush(dbref, dbref, int);
extern int backup_mush(dbref, dbref, int);
extern int copy_file(char *, char *, int);
extern pid_t write_pidfile(char *);
extern FILE *fmkstemp(char *);
extern void write_status_file(dbref, char *);
extern void do_shutdown(dbref, dbref, int, char *);
extern void dump_database_internal(int);
extern void dump_database(void);
extern void fork_and_dump(dbref, dbref, int);
extern void call_all_modules_nocache(char *);
extern int load_game(void);
extern int list_check(dbref, dbref, char, char *, char *, int, int *);
extern int Hearer(dbref);
extern void do_logwrite(dbref, dbref, int, char *, char *);
extern void do_readcache(dbref, dbref, int);
extern void process_preload(void);
extern void info(int, int, int);
extern void usage_dbconvert(void);
extern void usage_dbrecover(void);
extern void usage(char *, int);
extern void recover_flatfile(char *);
extern int dbconvert(int, char *[]);
extern int main(int, char *[]);
extern void init_rlimit(void);

/* help.c */
extern int helpmkindx_dump_entries(FILE *, long, help_indx_list *);
extern int helpmkindx(dbref, char *, char *);
extern int helpindex_read(HASHTAB *, char *);
extern void helpindex_load(dbref);
extern void helpindex_init(void);
extern void help_write(dbref, char *, HASHTAB *, char *, int);
extern void help_helper(dbref, int, int, char *, char *, char **);
extern void do_help(dbref, dbref, int, char *);

/* htab.c */
extern int hashval(char *, int);
extern int get_hashmask(int *);
extern void hashinit(HASHTAB *, int, int);
extern void hashreset(HASHTAB *);
extern int *hashfind_generic(HASHKEY, HASHTAB *);
extern int hashfindflags_generic(HASHKEY, HASHTAB *);
extern int hashadd_generic(HASHKEY, int *, HASHTAB *, int);
extern void hashdelete_generic(HASHKEY, HASHTAB *);
extern void hashdelall(int *, HASHTAB *);
extern void hashflush(HASHTAB *, int);
extern int hashrepl_generic(HASHKEY, int *, HASHTAB *);
extern void hashreplall(int *, int *, HASHTAB *);
extern char *hashinfo(const char *, HASHTAB *);
extern int *hash_firstentry(HASHTAB *);
extern int *hash_nextentry(HASHTAB *);
extern HASHKEY hash_firstkey_generic(HASHTAB *);
extern HASHKEY hash_nextkey_generic(HASHTAB *);
extern void hashresize(HASHTAB *, int);
extern int search_nametab(dbref, NAMETAB *, char *);
extern NAMETAB *find_nametab_ent(dbref, NAMETAB *, char *);
extern NAMETAB *find_nametab_ent_flag(dbref, NAMETAB *, int);
extern void display_nametab(dbref, NAMETAB *, char *, int);
extern void interp_nametab(dbref, NAMETAB *, int, char *, char *, char *);
extern void listset_nametab(dbref, NAMETAB *, int, char *, int);
extern int cf_ntab_access(int *, char *, long, dbref, char *);

/* log.c */
extern char *logfile_init(char *);
extern void logfile_move(char *, char *);
extern int start_log(const char *, const char *, int);
extern void end_log(void);
extern void _log_perror(const char *, const char *, const char *, const char *);
extern void _log_write(int, const char *, const char *, const char *, ...);
extern void log_write_raw(int, const char *, ...);
extern char *log_getname(dbref);
extern char *log_gettype(dbref, char *);
extern void do_logrotate(dbref, dbref, int);
extern void logfile_close(void);

/* look.c */
extern int did_attr(dbref, dbref, int);
extern void look_exits(dbref, dbref, const char *);
extern void look_contents(dbref, dbref, const char *, int);
extern void pairs_print(dbref, char *, char *, char **);
extern void pretty_format(char *, char **, char *);
extern void pretty_print(char *, char *, char *);
extern void view_atr(dbref, dbref, ATTR *, char *, dbref, int, int, int);
extern void look_atrs1(dbref, dbref, dbref, int, int, int);
extern void look_atrs(dbref, dbref, int, int);
extern void look_simple(dbref, dbref, int);
extern void show_a_desc(dbref, dbref, const char *);
extern void show_desc(dbref, dbref, int);
extern void look_in(dbref, dbref, int);
extern void look_here(dbref, dbref, int, int);
extern void do_look(dbref, dbref, int, char *);
extern void debug_examine(dbref, dbref);
extern void exam_wildattrs(dbref, dbref, int, int);
extern void do_examine(dbref, dbref, int, char *);
extern void do_score(dbref, dbref, int);
extern void do_inventory(dbref, dbref, int);
extern void do_entrances(dbref, dbref, int, char *);
extern void sweep_check(dbref, dbref, int, int);
extern void do_sweep(dbref, dbref, int, char *);
extern void do_decomp(dbref, dbref, int, char *, char *);
extern void show_vrml_url(dbref, dbref);

/* match.c */
extern void promote_match(dbref, int);
extern char *munge_space_for_match(const char *);
extern void match_player(void);
extern dbref absolute_nref(char *);
extern dbref absolute_name(int);
extern void match_absolute(void);
extern void match_numeric(void);
extern void match_me(void);
extern void match_home(void);
extern void match_here(void);
extern void match_list(dbref, int);
extern void match_possession(void);
extern void match_neighbor(void);
extern int match_exit_internal(dbref, dbref, int);
extern void match_exit(void);
extern void match_exit_with_parents(void);
extern void match_carried_exit(void);
extern void match_carried_exit_with_parents(void);
extern void match_master_exit(void);
extern void match_zone_exit(void);
extern void match_everything(int);
extern dbref match_result(void);
extern dbref last_match_result(void);
extern dbref match_status(dbref, dbref);
extern dbref noisy_match_result(void);
extern void save_match_state(MSTATE *);
extern void restore_match_state(MSTATE *);
extern void init_match(dbref, const char *, int);
extern void init_match_check_keys(dbref, const char *, int);

/* mguests.c */
extern dbref create_guest(int);
extern void destroy_guest(dbref);
extern char *make_guest(DESC *);

/* move.c */
extern void process_leave_loc(dbref, dbref, dbref, int, int);
extern void process_enter_loc(dbref, dbref, dbref, int, int);
extern void move_object(dbref, dbref);
extern void send_dropto(dbref, dbref);
extern void process_sticky_dropto(dbref, dbref);
extern void process_dropped_dropto(dbref, dbref);
extern void move_via_generic(dbref, dbref, dbref, int);
extern void move_via_exit(dbref, dbref, dbref, dbref, int);
extern int move_via_teleport(dbref, dbref, dbref, int);
extern dbref find_var_dest(dbref, dbref);
extern void move_exit(dbref, dbref, int, const char *, int);
extern void do_move(dbref, dbref, int, char *);
extern void do_get(dbref, dbref, int, char *);
extern void do_drop(dbref, dbref, int, char *);
extern void do_enter_internal(dbref, dbref, int);
extern void do_enter(dbref, dbref, int, char *);
extern void do_leave(dbref, dbref, int);

/* netcommon.c */
extern struct timeval timeval_sub(struct timeval, struct timeval);
extern int msec_diff(struct timeval, struct timeval);
extern struct timeval msec_add(struct timeval, int);
extern struct timeval update_quotas(struct timeval, struct timeval);
extern void raw_notify_html(dbref, const char *, ...);
extern void raw_notify(dbref, const char *, ...);
extern void raw_notify_newline(dbref);
extern void raw_broadcast(int, char *, ...);
extern void clearstrings(DESC *);
extern void queue_write(DESC *, const char *, int);
extern void queue_string(DESC *, const char *, ...);
extern void queue_rawstring(DESC *, const char *, ...);
extern void freeqs(DESC *);
extern void desc_addhash(DESC *);
extern void desc_delhash(DESC *);
extern void welcome_user(DESC *);
extern void save_command(DESC *, CBLK *);
extern void set_userstring(char **, const char *);
extern void parse_connect(const char *, char *, char *, char *);
extern const char *time_format_1(time_t);
extern const char *time_format_2(time_t);
extern void announce_connattr(DESC *, dbref, dbref, const char *, int, int);
extern void announce_connect(dbref, DESC *, const char *);
extern void announce_disconnect(dbref, DESC *, const char *);
extern int boot_off(dbref, char *);
extern int boot_by_port(int, int, char *);
extern void desc_reload(dbref);
extern int fetch_idle(dbref, int);
extern int fetch_connect(dbref, int);
extern void check_idle(void);
extern char *trimmed_name(dbref);
extern char *trimmed_site(char *);
extern void dump_users(DESC *, char *, int);
extern void dump_info(DESC *);
extern void do_colormap(dbref, dbref, int, char *, char *);
extern char *sane_doing(char *, char *);
extern void do_doing(dbref, dbref, int, char *);
extern void init_logout_cmdtab(void);
extern void failconn(const char *, const char *, const char *, DESC *, int, dbref, int, char *, char *, char *, char *, char *);
extern int check_connect(DESC *, char *);
extern void logged_out_internal(DESC *, int, char *);
extern void do_command(DESC *, char *, int);
extern void logged_out(dbref, dbref, int, char *);
extern void process_commands(void);
extern int site_check(struct in_addr, SITE *);
extern const char *stat_string(int, int);
extern unsigned int mask_to_prefix(unsigned int);
extern void list_sites(dbref, SITE *, const char *, int);
extern void list_siteinfo(dbref);
extern void make_ulist(dbref, char *, char **);
extern void make_portlist(dbref, dbref, char *, char **);
extern void make_sessioninfo(dbref, dbref, int, char *, char **);
extern char *get_doing(dbref, int);
extern dbref get_programmer(dbref);
extern dbref find_connected_name(dbref, char *);
extern dbref find_connected_ambiguous(dbref, char *);

/* object.c */
extern void Log_pointer_err(dbref, dbref, dbref, dbref, const char *, const char *);
extern void Log_header_err(dbref, dbref, dbref, int, const char *, const char *);
extern void Log_simple_err(dbref, dbref, const char *);
extern int can_set_home(dbref, dbref, dbref);
extern dbref new_home(dbref);
extern dbref clone_home(dbref, dbref);
extern void update_newobjs(dbref, dbref, int);
extern int ok_exit_name(char *);
extern dbref create_obj(dbref, int, char *, int);
extern void destroy_obj(dbref, dbref);
extern void do_freelist(dbref, dbref, int, char *);
extern void make_freelist(void);
extern void divest_object(dbref);
extern void empty_obj(dbref);
extern void destroy_exit(dbref);
extern void destroy_thing(dbref);
extern void destroy_player(dbref);
extern void purge_going(void);
extern void check_pennies(dbref, int, const char *);
extern void check_dead_refs(void);
extern void check_loc_exits(dbref);
extern void check_exit_chains(void);
extern void check_misplaced_obj(dbref *, dbref, dbref);
extern void check_loc_contents(dbref);
extern void check_contents_chains(void);
extern void do_dbck(dbref, dbref, int);

/* player.c */
extern void decrypt_logindata(char *, LDATA *);
extern void encrypt_logindata(char *, LDATA *);
extern void record_login(dbref, int, char *, char *, char *);
extern int check_pass(dbref, const char *);
extern dbref connect_player(char *, char *, char *, char *, char *);
extern dbref create_player(char *, char *, dbref, int, int);
extern void do_password(dbref, dbref, int, char *, char *);
extern void disp_from_on(dbref, char *, char *);
extern void do_last(dbref, dbref, int, char *);
extern int add_player_name(dbref, char *);
extern int delete_player_name(dbref, char *);
extern dbref lookup_player(dbref, char *, int);
extern void load_player_names(void);
extern void badname_add(char *);
extern void badname_remove(char *);
extern int badname_check(char *);
extern void badname_list(dbref, const char *);

/* player_c.c */
extern void pcache_init(void);
extern void pcache_reload1(dbref, PCACHE *);
extern PCACHE *pcache_find(dbref);
extern void pcache_reload(dbref);
extern void pcache_save(PCACHE *);
extern void pcache_trim(void);
extern void pcache_sync(void);
extern int a_Queue(dbref, int);
extern void s_Queue(dbref, int);
extern int QueueMax(dbref);
extern int Pennies(dbref);
extern void s_Pennies(dbref, int);

/* powers.c */
extern int ph_any(dbref, dbref, POWER, int, int);
extern int ph_god(dbref, dbref, POWER, int, int);
extern int ph_wiz(dbref, dbref, POWER, int, int);
extern int ph_wizroy(dbref, dbref, POWER, int, int);
extern int ph_restrict_player(dbref, dbref, POWER, int, int);
extern int ph_privileged(dbref, dbref, POWER, int, int);
extern int ph_inherit(dbref, dbref, POWER, int, int);
extern void init_powertab(void);
extern void display_powertab(dbref);
extern POWERENT *find_power(dbref, char *);
extern int decode_power(dbref, char *, POWERSET *);
extern void power_set(dbref, dbref, char *, int);
extern int has_power(dbref, dbref, char *);
extern char *power_description(dbref, dbref);
extern void decompile_powers(dbref, dbref, char *);
extern int cf_power_access(int *, char *, long, dbref, char *);

/* predicates.c */
extern dbref insert_first(dbref, dbref);
extern dbref remove_first(dbref, dbref);
extern dbref reverse_list(dbref);
extern int member(dbref, dbref);
extern int is_integer(char *);
extern int is_number(char *);
extern int could_doit(dbref, dbref, int);
extern int canpayquota(dbref, dbref, int, int);
extern int pay_quota(dbref, int, int);
extern int canpayfees(dbref, dbref, int, int, int);
extern int type_quota(int);
extern int payfor(dbref, dbref);
extern int payfees(dbref, int, int, int);
extern void add_quota(dbref, int, int);
extern void giveto(dbref, int);
extern int ok_name(const char *);
extern int ok_player_name(const char *);
extern int ok_attr_name(const char *);
extern int ok_password(const char *, dbref);
extern void handle_ears(dbref, int, int);
extern void do_switch(dbref, dbref, int, char *, char *[], int, char *[], int);
extern void do_end(dbref, dbref, int, char *, char *, char *[], int);
extern void do_hook(dbref, dbref, int, char *, char *);
extern void do_addcommand(dbref, dbref, int, char *, char *);
extern void do_listcommands(dbref, dbref, int, char *);
extern void do_delcommand(dbref, dbref, int, char *, char *);
extern void handle_prog(DESC *, char *);
extern int ok_program(dbref, dbref);
extern void do_quitprog(dbref, dbref, int, char *);
extern void do_prog(dbref, dbref, int, char *, char *);
extern void do_restart(dbref, dbref, int);
extern void do_comment(dbref, dbref, int);
extern void do_eval(dbref, dbref, int, char *);
extern dbref promote_dflt(dbref, dbref);
extern dbref match_possessed(dbref, dbref, char *, dbref, int);
extern void parse_range(char **, dbref *, dbref *);
extern int parse_thing_slash(dbref, char *, char **, dbref *);
extern int get_obj_and_lock(dbref, char *, dbref *, ATTR **, char *, char **);
extern dbref where_is(dbref);
extern dbref where_room(dbref);
extern int locatable(dbref, dbref, dbref);
extern int nearby(dbref, dbref);
extern char *master_attr(dbref, dbref, int, char **, int, int *);
extern void did_it(dbref, dbref, int, const char *, int, const char *, int, int, char *[], int, int);
extern void do_verb(dbref, dbref, int, char *, char *[], int);
extern void do_include(dbref, dbref, int, char *, char *[], int, char *[], int);
extern void do_redirect(dbref, dbref, int, char *, char *);
extern void do_reference(dbref, dbref, int, char *, char *);

/* quota.c */
extern void load_quota(int [], dbref, int);
extern void save_quota(int [], dbref, int);
extern void count_objquota(dbref, int *, int *, int *, int *, int *);
extern void adjust_quota(dbref, int, int, int);
extern void mung_quotas(dbref, int, int);
extern void show_quota(dbref, dbref);
extern void show_quota_header(dbref);
extern void do_quota(dbref, dbref, int, char *, char *);

/* recover.c */
extern void gdbm_panic(char *);
extern int dbrecover(int, char *[]);

/* rob.c */
extern void do_kill(dbref, dbref, int, char *, char *);
extern void give_thing(dbref, dbref, int, char *);
extern void give_money(dbref, dbref, int, int);
extern void do_give(dbref, dbref, int, char *, char *);

/* set.c */
extern dbref match_controlled(dbref, const char *);
extern dbref match_controlled_quiet(dbref, const char *);
extern dbref match_affected(dbref, const char *);
extern void do_chzone(dbref, dbref, int, const char *, const char *);
extern void do_name(dbref, dbref, int, const char *, char *);
extern void set_player_aliases(dbref, dbref, char *, char *, int);
extern void do_alias(dbref, dbref, int, char *, char *);
extern void do_lock(dbref, dbref, int, char *, char *);
extern void do_unlock(dbref, dbref, int, char *);
extern void do_unlink(dbref, dbref, int, char *);
extern void do_chown(dbref, dbref, int, char *, char *);
extern void set_attr_internal(dbref, dbref, int, char *, int, char *, char **);
extern void do_set(dbref, dbref, int, char *, char *);
extern void do_power(dbref, dbref, int, char *, char *);
extern void do_setattr(dbref, dbref, int, char *, char *);
extern void do_cpattr(dbref, dbref, int, char *, char *[], int);
extern void do_mvattr(dbref, dbref, int, char *, char *[], int);
extern int parse_attrib(dbref, char *, dbref *, int *, int);
extern void find_wild_attrs(dbref, dbref, char *, int, int, int, int);
extern int parse_attrib_wild(dbref, char *, dbref *, int, int, int, int);
extern void edit_string_ansi(char *, char **, char **, char *, char *);
extern void do_edit(dbref, dbref, int, char *, char *[], int);
extern void do_wipe(dbref, dbref, int, char *);
extern void do_trigger(dbref, dbref, int, char *, char *[], int);
extern void do_use(dbref, dbref, int, char *);
extern void do_setvattr(dbref, dbref, int, char *, char *);

/* speech.c */
extern int sp_ok(dbref);
extern void say_shout(int, const char *, int, dbref, char *);
extern void do_think(dbref, dbref, int, char *);
extern int check_speechformat(dbref, dbref, dbref, dbref, char *, int);
extern void format_speech(dbref, dbref, dbref, char *, int);
extern void do_say(dbref, dbref, int, char *);
extern void page_return(dbref, dbref, const char *, int, const char *, ...);
extern int page_check(dbref, dbref);
extern void do_page(dbref, dbref, int, char *, char *);
extern void do_reply_page(dbref, dbref, int, char *);
extern void whisper_pose(dbref, dbref, char *);
extern void do_pemit_list(dbref, char *, const char *, int);
extern void do_pemit(dbref, dbref, int, char *, char *);

/* stringutil.c */
extern char *strip_ansi(const char *);
extern char *strip_xterm(char *);
extern int strip_ansi_len(const char *);
extern char *normal_to_white(const char *);
extern char *ansi_transition_esccode(int, int);
extern char *ansi_transition_mushcode(int, int);
extern char *ansi_transition_letters(int, int);
extern int ansi_map_states(const char *, int **, char **);
extern char *remap_colors(const char *, int *);
extern char *translate_string(char *, int);
extern int rgb2xterm(long);
extern int str2xterm(char *);
extern char *upcasestr(char *);
extern char *munge_space(char *);
extern char *trim_spaces(char *);
extern char *grabto(char **, char);
extern int string_compare(const char *, const char *);
extern int string_prefix(const char *, const char *);
extern const char *string_match(const char *, const char *);
extern char *replace_string(const char *, const char *, const char *);
extern void edit_string(char *, char **, char *, char *);
extern int minmatch(char *, char *, int);
extern char *safe_snprintf(char *, size_t, const char *, ...);
extern char *safe_vsnprintf(char *, size_t, const char *, va_list);
extern char *safe_sprintf(char *, char **, const char *, ...);
extern int safe_strcat(char *, char **, const char *, size_t);
extern char *safe_strncat(char *, char **, const char *, size_t, size_t);
extern int safe_strcatchr(char *, char **, char, size_t);
extern int matches_exit_from_list(char *, char *);
extern char *ltos(long);
extern void safe_ltos(char *, char **, long, size_t);
extern char *repeatchar(int, char);
extern void skip_esccode(char **);
extern void copy_esccode(char **, char **);
extern void safe_copy_esccode(char **, char *, char **);
extern void track_esccode(char **, int *);
extern void track_all_esccodes(char **, char **, int *);
extern void track_ansi_letters(char *, int *);

/* timer.c */
extern void check_cron(void);
extern char *parse_cronlist(dbref, unsigned char *, int, int, char *);
extern int call_cron(dbref, dbref, int, char *);
extern void do_cron(dbref, dbref, int, char *, char *);
extern int cron_clr(dbref, int);
extern void do_crondel(dbref, dbref, int, char *);
extern void do_crontab(dbref, dbref, int, char *);
extern void init_timer(void);
extern void dispatch(void);
extern void do_timewarp(dbref, dbref, int, char *);

/* udb_misc.c */
extern void log_db_err(int, int, const char *);
extern void warning(char *, ...);
extern void fatal(char *, ...);

/* udb_obj.c */
extern Obj *unroll_obj(char *);
extern char *rollup_obj(Obj *);
extern int obj_siz(Obj *);
extern void objfree(Obj *);
extern char *obj_get_attrib(int, Obj *);
extern void obj_set_attrib(int, Obj *, char *);
extern void obj_del_attrib(int, Obj *);
extern Obj *get_free_objpipe(unsigned int);
extern char *pipe_get_attrib(int, unsigned int);
extern void pipe_set_attrib(int, unsigned int, char *);
extern void pipe_del_attrib(int, unsigned int);
extern void attrib_sync(void);

/* udb_ocache.c */
extern int cachehash(void *, int, unsigned int);
extern void cache_repl(Cache *, void *, int, unsigned int, unsigned int);
extern int cache_init(int);
extern void cache_reset(void);
extern void list_cached_objs(dbref);
extern void list_cached_attrs(dbref);
extern DBData cache_get(DBData, unsigned int);
extern int cache_put(DBData, DBData, unsigned int);
extern Cache *get_free_entry(int);
extern int cache_write(Cache *);
extern int cache_sync(void);
extern void cache_del(DBData, unsigned int);

/* udb_ochunk.c */
extern void dddb_setsync(int);
extern void dbm_error(char *);
extern int dddb_optimize(void);
extern int dddb_init(void);
extern int dddb_setfile(char *);
extern int dddb_close(void);
extern DBData db_get(DBData, unsigned int);
extern int db_put(DBData, DBData, unsigned int);
extern int db_del(DBData, unsigned int);
extern void db_lock(void);
extern void db_unlock(void);

/* unparse.c */
extern char *unparse_object_quiet(dbref, dbref);
extern void unparse_boolexp1(dbref, BOOLEXP *, char, int);
extern char *unparse_boolexp_quiet(dbref, BOOLEXP *);
extern char *unparse_boolexp(dbref, BOOLEXP *);
extern char *unparse_boolexp_decompile(dbref, BOOLEXP *);
extern char *unparse_boolexp_function(dbref, BOOLEXP *);

/* vattr.c */
extern void vattr_init(void);
extern VATTR *vattr_find(char *);
extern VATTR *vattr_alloc(char *, int);
extern VATTR *vattr_define(char *, int, int);
extern void vattr_delete(char *);
extern VATTR *vattr_rename(char *, char *);
extern VATTR *vattr_first(void);
extern VATTR *vattr_next(VATTR *);
extern void fixcase(char *);
extern char *store_string(char *);

/* version.c */
extern void do_version(dbref, dbref, int);
extern void init_version(void);
extern void log_version(void);

/* walkdb.c */
extern void bind_and_queue(dbref, dbref, char *, char *, char *[], int, int, int);
extern void do_dolist(dbref, dbref, int, char *, char *, char *[], int);
extern void do_find(dbref, dbref, int, char *);
extern int get_stats(dbref, dbref, STATS *);
extern void do_stats(dbref, dbref, int, char *);
extern int chown_all(dbref, dbref, dbref, int);
extern void do_chownall(dbref, dbref, int, char *, char *);
extern void er_mark_disabled(dbref);
extern int search_setup(dbref, char *, SEARCH *);
extern void search_perform(dbref, dbref, SEARCH *);
extern void search_mark(dbref, int);
extern void do_search(dbref, dbref, int, char *);
extern void mark_place(dbref);
extern void do_floaters(dbref, dbref, int, char *);
extern void do_markall(dbref, dbref, int);
extern void do_apply_marked(dbref, dbref, int, char *, char *[], int);
extern void olist_push(void);
extern void olist_pop(void);
extern void olist_add(dbref);
extern dbref olist_first(void);
extern dbref olist_next(void);

/* wild.c */
extern int check_literals(char *, char *);
extern int real_quick_wild(char *, char *);
extern int quick_wild(char *, char *);
extern int real_wild1(char *, char *, int);
extern int wild1(char *, char *, int);
extern int wild(char *, char *, char *[], int);
extern int wild_match(char *, char *);
extern int register_match(char *, char *, char *[], int);

/* wiz.c */
extern void do_teleport(dbref, dbref, int, char *, char *);
extern void do_force_prefixed(dbref, dbref, int, char *, char *[], int);
extern void do_force(dbref, dbref, int, char *, char *, char *[], int);
extern void do_toad(dbref, dbref, int, char *, char *);
extern void do_newpassword(dbref, dbref, int, char *, char *);
extern void do_boot(dbref, dbref, int, char *);
extern void do_poor(dbref, dbref, int, char *);
extern void do_cut(dbref, dbref, int, char *);
extern void do_motd(dbref, dbref, int, char *);
extern void do_global(dbref, dbref, int, char *);

#endif /* __PROTOTYPES_H */
